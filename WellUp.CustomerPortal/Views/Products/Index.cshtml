<!-- WellUp.CustomerPortal.Views.Products/Index.cshtml-->
@model List<WellUp.CustomerPortal.Models.ViewModels.ProductGroupViewModel>
@{
    ViewData["Title"] = "Products";
    Layout = "~/Views/Shared/Components/_CustomerLayout.cshtml";
}

<div class="container">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="page-header">
                <h1>Water Products</h1>
                <p class="text-muted">Choose from our premium water products for your home or office</p>
            </div>
        </div>
    </div>

    <!-- Product Groups -->
    <div class="row">
        @foreach (var group in Model)
        {
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="product-card h-100">
                    <div class="product-image">
                        <img src="@group.ImageUrl" alt="@group.GroupName" class="img-fluid">
                    </div>
                    <div class="product-info">
                        <h3 class="product-name">@group.GroupName</h3>
                        <p class="product-description">@group.GroupDescription</p>

                        <div class="product-options">
                            @foreach (var option in group.Options)
                            {
                                <div class="product-option mb-3">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <div>
                                            <strong>@option.Name</strong>
                                            <div class="product-price">₱@option.Product.Price.ToString("N2")</div>
                                        </div>
                                        <div class="stock-info @(option.EffectiveStockQuantity <= 5 ? "stock-low" : "")">
                                            <i class="fas fa-cubes me-1"></i>
                                            @if (option.EffectiveStockQuantity <= 0)
                                            {
                                                <span>Out of Stock</span>
                                            }
                                            else
                                            {
                                                <span>@option.EffectiveStockQuantity in stock</span>
                                            }
                                        </div>
                                    </div>
                                    <p class="product-option-desc small">@option.Description</p>

                                    <!-- Quantity selector and button -->
                                    <div class="d-flex flex-wrap align-items-center mt-3">
                                        <!-- Quantity Selector -->
                                        <div class="quantity-selector me-3 mb-2">
                                            <div class="input-group input-group-sm" style="width: 120px;">
                                                <button type="button" class="btn btn-outline-secondary decrease-btn" data-product-id="@option.Product.ProductId">
                                                    <i class="fas fa-minus"></i>
                                                </button>
                                                <input type="number" id="quantity-@option.Product.ProductId" class="form-control text-center quantity-input"
                                                       value="1" min="1" max="@option.EffectiveStockQuantity">
                                                <button type="button" class="btn btn-outline-secondary increase-btn" data-product-id="@option.Product.ProductId">
                                                    <i class="fas fa-plus"></i>
                                                </button>
                                            </div>
                                        </div>

                                        <!-- Action Button -->
                                        <div class="w-100">
                                            <form asp-controller="Products" asp-action="AddToCart" method="post">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="productId" value="@option.Product.ProductId">
                                                <input type="hidden" name="quantity" class="qty-input-@option.Product.ProductId" value="1">
                                                <button type="submit" class="btn btn-outline-primary w-100" @(option.EffectiveStockQuantity <= 0 ? "disabled" : "")>
                                                    <i class="fas fa-cart-plus me-1"></i> ADD TO CART
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>

                                @if (option != group.Options.Last())
                                {
                                    <hr class="option-divider">
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Quantity selector functionality
            $('.increase-btn').click(function() {
                var productId = $(this).data('product-id');
                var input = $('#quantity-' + productId);
                var currentValue = parseInt(input.val());
                var maxValue = parseInt(input.attr('max'));

                if (currentValue < maxValue) {
                    input.val(currentValue + 1);
                    updateHiddenInputs(productId, currentValue + 1);
                }
            });

            $('.decrease-btn').click(function() {
                var productId = $(this).data('product-id');
                var input = $('#quantity-' + productId);
                var currentValue = parseInt(input.val());

                if (currentValue > 1) {
                    input.val(currentValue - 1);
                    updateHiddenInputs(productId, currentValue - 1);
                }
            });

            // Update quantity when typing in the input
            $('.quantity-input').on('change', function() {
                var productId = $(this).attr('id').replace('quantity-', '');
                var value = parseInt($(this).val());
                var maxValue = parseInt($(this).attr('max'));

                // Validate input
                if (isNaN(value) || value < 1) {
                    value = 1;
                    $(this).val(1);
                } else if (value > maxValue) {
                    value = maxValue;
                    $(this).val(maxValue);
                }

                updateHiddenInputs(productId, value);
            });

            // Function to update hidden inputs in both forms
            function updateHiddenInputs(productId, value) {
                $('.qty-input-' + productId).val(value);
            }
        });
    </script>
}